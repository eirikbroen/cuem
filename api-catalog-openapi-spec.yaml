openapi: 3.0.0
info:
  version: 1.0.0
  title: API Catalog Harvest
  description: An API for registering and API management
  contact:
    name: Developer portal team
    email: developerportal@oslo.kommune.no
    url: 'https://github.oslo.kommune.no/origodigi/api-catalog-backend'
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: ''
tags:
  - name: APIs
    description: Operations for managing APIs in the catalog
  - name: Access
    description: Operations related to listing and revoking access to use APIs in the catalog
  - name: Access requests
    description: Operations related to request for access to use APIs in the catalog
  - name: Gateways
    description: Operations related to API-Gateways
paths:
  /apis:
    get:
      summary: List all the APIs in the catalog
      description: >-
        Note that OAuth2 security is optional here, and that adding it will allow you to list all APIs that
        the principal has access to. Otherwise only API's with a visibility level of public will be returned.
      operationId: listApis
      security:
        - {} # Security is optional
        - oAuth: []
      tags:
        - APIs
      parameters:
        - $ref: '#/components/parameters/markdown-as-html'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SomeApi'
        '406':
          $ref: '#/components/responses/MissingAcceptHeader'
  '/apis/without-spec':
    post:
      summary: Adds a new API
      description: >-
        Note that the posted ID will be ignored. It's just to make the API spec
        less complex.
      operationId: addApiWithoutSpec
      tags:
        - APIs
      security:
        - oAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    description: >-
                      The API that was stored, with a generated ID for future
                      reference.
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          description: Resource creation conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
        '406':
          $ref: '#/components/responses/MissingAcceptHeader'
      requestBody:
        $ref: '#/components/requestBodies/SomeApiWithoutSpec'
  '/apis/with-spec':
    post:
      summary: Adds a new API
      description: >-
        Note that the posted ID will be ignored. It's just to make the API spec
        less complex.
      operationId: addApiWithSpec
      tags:
        - APIs
      security:
        - oAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    description: >-
                      The API that was stored, with a generated ID for future
                      reference.
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          description: Resource creation conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
        '406':
          $ref: '#/components/responses/MissingAcceptHeader'
      requestBody:
        $ref: '#/components/requestBodies/SomeApiWithSpec'
  '/apis/{id}':
    get:
      summary: Gets API by ID
      description: >-
        Note that OAuth2 security is optional here, and that adding it is the only way the get an API
        which has stricter visibility level than public.
      operationId: getApi
      security:
        - {} # Security is optional
        - oAuth: []
      tags:
        - APIs
      parameters:
        - $ref: '#/components/parameters/markdown-as-html'
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/SomeApi'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '403':
          description: Forbidden, you do not have access to view this API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/MissingAcceptHeader'
    put:
      summary: Updates an existing API
      operationId: updateApi
      tags:
        - APIs
      description: >-
        Note that the ID in SomeApi will be ignored. It's just to make the API spec
        less complex.

        When supplying a Swagger or OpenAPI specificaion URL, the specification will be parsed
        and updated with information from the spec. Other fields will then be ignored.

        If not supplying a specification url, the API will be updated with information
        from the other fields.

        If the API's current accessLevel is AUTOMATIC_API_KEY or API_KEY_WITH_APPROVAL,
        any update in the accessDetails object (and underlying objects) will be ignored as update of this is
        not supported. This includes changing the accessLevel from AUTOMATIC_API_KEY to API_KEY_WITH_APPROVAL and
        vice versa.

        If the API's current accessLevel is NO_ACCESS and is changed to AUTOMATIC_API_KEY or API_KEY_WITH_APPROVAL,
        then accessDetails will need to be entered.
      security:
        - oAuth: []
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Success
        '406':
          $ref: '#/components/responses/MissingAcceptHeader'
      requestBody:
        $ref: '#/components/requestBodies/SomeApi'
    delete:
      summary: Deletes the given API
      operationId: deleteApi
      tags:
        - APIs
      security:
        - oAuth: []
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: API deleted
        '400':
          description: Invalid ID supplied
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/MissingAcceptHeader'
  '/apis/{id}/spec':
    get:
      summary: Get API's Swagger/OpenAPI specification
      description: |
        Note that OAuth2 security is optional here, and that adding it is the only way the get this API
        Swagger/OpenAPI specification which has stricter visibility level than public.
      operationId: getApiSpecification
      security:
        - {} # Security is optional
        - oAuth: []
      tags:
        - APIs
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Invalid ID supplied
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '403':
          description: Forbidden, you do not have access to view this API's Swagger/OpenAPI specification.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/MissingAcceptHeader'
  '/specification/summary':
    get:
      summary: Get summary from a Swagger/OpenAPI specification
      operationId: extractApiSpecSummary
      tags:
        - APIs
      parameters:
        - $ref: '#/components/parameters/apiSpecificationUrl'
      responses:
        '200':
          description: Summary extracted from url
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/apiSpecSummary'
        '400':
          description: Invalid specification url
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/InvalidSpecificationError'
        '406':
          $ref: '#/components/responses/MissingAcceptHeader'
  '/specification/upload':
    post:
      summary: Upload an API specification file
      operationId: uploadApiSpecificationFile
      tags:
        - APIs
      security:
        - oAuth: []
      responses:
        '201':
          description: Temporary accessable url to uploaded resource
          content:
            'application/text':
              schema:
                type: string
                description: Temporary accessable url to uploaded resource
        '400':
          description: Invalid API specification
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/InvalidSpecificationError'
        '406':
          $ref: '#/components/responses/MissingAcceptHeader'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  # NOTE: using format: binary is currently buggy in swagger-codegen and results in a byte array which is wrong.
                  format: binary
                  description: File with API specification in Swagger/Open API format
  '/apigateway/services':
    get:
      summary: Get all registered gateway services
      operationId: getGatewayServices
      tags:
        - Gateways
      security:
        - oAuth: []
      responses:
        '401':
          $ref: '#/components/responses/Unauthorized'
        '200':
          description: Summary extracted from url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayServices'
  '/apigateway/routes/prefixurl':
    post:
      summary: Check whether or not prefix for URL is valid and does not already exist in the gateway
      operationId: validateRouteUrlPrefix
      tags:
        - Gateways
      security:
       - oAuth: []
      responses:
        '200':
          description: Prefix is valid and does not exist in the gateway
        '400':
          description: Prefix URL is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          description: URL with prefix already exist in the gateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
      requestBody:
        description: URL prefix to validate
        required: true
        content:
          text/plain:
            schema:
              type: string
  /access:
    get:
      summary: Get list of access objects
      description: |
        API consumers call this endpoint to get a list of only their access objects for all APIs. </br>
        API owners call this endpoint with the __api__ query parameter to get a list of all access objects for that API.
      operationId: getAccessList
      tags:
        - Access
      security:
        - oAuth: []
      parameters:
        - $ref: '#/components/parameters/includeRevoked'
        - $ref: '#/components/parameters/apiQueryParam'
      responses:
        '200':
          $ref: '#/components/responses/AccessList'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '406':
          $ref: '#/components/responses/MissingAcceptHeader'
  '/access/{id}':
    patch:
      summary: Revoke the access
      description: |
        The API owner or API consumer call this method to revoke the access.
      operationId: revokeAccess
      tags:
        - Access
      security:
        - oAuth: []
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '200':
          $ref: '#/components/responses/AccessRevoked'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/ForbiddenOwnerOrUser'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/MissingAcceptHeader'
        '409':
          description: The API key has already been revoked, you cannot revoke it again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
  '/access/{id}/key':
    patch:
      summary: Show the API key once.
      description: |
        Get the API key by access ID once. </br>
        Successive calls to this endpoint will lead to 400 BadRequest as the key value can only be returned once.
      operationId: showAccessAPIKeyValue
      tags:
        - Access
      security:
        - oAuth: []
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '200':
          $ref: '#/components/responses/AccessApiKeyValue'
        '400':
          $ref: '#/components/responses/BadRequestOnlyShowAPIKeyOnce'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/ForbiddenOnlyUser'
        '406':
          $ref: '#/components/responses/MissingAcceptHeader'
  '/access-requests':
      get:
        summary: Get a list of all access-requests
        description: |
          API consumers call this endpoint to get a list of only their access objects for all APIs. </br>
          API owners call this endpoint with the __api__ query parameter to get a list of all access objects for that API.
        operationId: getAccessRequestList
        tags:
          - Access requests
        security:
          - oAuth: []
        parameters:
          - $ref: '#/components/parameters/apiQueryParam'
          - $ref: '#/components/parameters/accessRequestStatusQueryParam'
        responses:
          '200':
            $ref: '#/components/responses/AccessRequestList'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/ForbiddenOwnerOrUser'
          '404':
            $ref: '#/components/responses/NotFound'
          '406':
            $ref: '#/components/responses/MissingAcceptHeader'
      post:
        summary: Create new access-request
        description: Used by the consumer to request access to the API from the owner.
        operationId: createAccessRequest
        tags:
          - Access requests
        security:
          - oAuth: []
        requestBody:
          $ref: '#/components/requestBodies/AccessRequest'
        responses:
          '201':
            $ref: '#/components/responses/AccessRequestCreated'
          '400':
            $ref: '#/components/responses/BadRequestAccessRequestCreated'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/ForbiddenMissingEmailInToken'
          '404':
            $ref: '#/components/responses/NotFound'
          '406':
            $ref: '#/components/responses/MissingAcceptHeader'
  '/access-requests/{id}':
    patch:
      summary: Update access request with status and text
      description: |
        Used by API owner to update the status of access request.
        Call to this endpoint will update the following:
        - requestStatus from PENDING_APPROVAL to REJECTED or APPROVED.
        - resolvedMessage to whatever the API owner responds.
        - resolvedAt to the dateTime the call happened.

        This endpoint will send an email with a response to the consumer.
        Consumers must use the DELETE operation to remove their own request for access.
      operationId: updateAccessRequest
      tags:
        - Access requests
      security:
        - oAuth: []
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      requestBody:
        $ref: '#/components/requestBodies/UpdateAccessRequest'
      responses:
        '200':
          $ref: '#/components/responses/AccessRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          $ref: '#/components/responses/BadRequestAccessRequestAlreadyResolved'
        '403':
          $ref: '#/components/responses/ForbiddenOwnerOrUser'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/MissingAcceptHeader'
    delete:
      summary: Delete the access-request by ID.
      description: Used by a consumer to withdraw access-request
      operationId: deleteAccessRequest
      tags:
        - Access requests
      security:
        - oAuth: []
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '204':
          $ref: '#/components/responses/AccessRequestDeleted'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/ForbiddenOnlyUser'
        404:
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/MissingAcceptHeader'
components:
  securitySchemes:
    oAuth:
      type: oauth2
      description: This API uses OAuth 2 with the Authorization Code grant flow (Actually OIDC but swagger does not support it properly).
      flows:
        authorizationCode:
          authorizationUrl: 'https://login.oslo.kommune.no/auth/realms/api-catalog/protocol/openid-connect/auth'
          tokenUrl: 'https://login.oslo.kommune.no/auth/realms/api-catalog/protocol/openid-connect/token'
          scopes: {}
  parameters:
    id:
      name: id
      required: true
      description: The ID of the API
      in: path
      schema:
        type: integer
        format: int64
    idPathParam:
      name: id
      required: true
      description: The ID of the resource
      in: path
      schema:
        type: integer
        format: int64
    apiQueryParam:
      name: api
      description: Parameter to filter the result by the ID of the API
      required: false
      in: query
      schema:
        type: integer
        format: int64
    accessRequestStatusQueryParam:
        name: status
        description: Parameter to filter the result by the status of the access request.
        required: false
        in: query
        schema:
          $ref: '#/components/schemas/AccessRequestStatus'
    apiSpecificationUrl:
      name: apiSpecificationUrl
      required: true
      in: query
      description: Full url for api specification
      schema:
        type: string
    markdown-as-html:
      name: markdown-as-html
      in: query
      description: Whether or not to return the API's 'extendedDescription' field as parsed HTML
      schema:
        type: boolean
        default: false
    apiKeyId:
      name: apiKeyId
      required: true
      description: The ID of the API key
      in: path
      schema:
        type: string
        example: 265c3420-62b2-4dad-a634-445c8bcbd582
    includeRevoked:
      in: query
      name: include-revoked
      required: false
      schema:
        type: boolean
        default: false
      description: |
        Default is not to use this query parameter. </br>
        __true__: Return access objects with both granted and revoked status. </br>
        __false__: Return only access objects with granted status.
  requestBodies:
    SomeApi:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SomeApi'
      description: An API provided by some third party
      required: true
    SomeApiWithoutSpec:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SomeApiWithoutSpec'
      description: An API without OpenAPI/Swagger specification provided by some third party
      required: true
    SomeApiWithSpec:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SomeApiWithSpec'
      description: An API with OpenAPI/Swagger specification provided by some third party
      required: true
    AccessRequest:
      description: The request for an access-request
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAccessRequestRequest'
    UpdateAccessRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAccessRequestRequest'
  responses:
    AccessList:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Access'
    AccessApiKeyValue:
      description: The API Key value
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessApiKeyValueResponse'
    AccessRevoked:
      description: Successfully revoked access to the API.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessRevokedResponse'
    AccessRequestCreated:
      description: Access request created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessRequest'
    BadRequestAccessRequestCreated:
      description: |
        Bad request:
         - Invalid email address
         - The owner of the API does not allow automatic access, </br>
         please provide a [__reasonText__] which states the reason for this request.
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/BadRequestError'
    BadRequestAccessRequestAlreadyResolved:
      description: |
        Bad request, the access request has already been resolved.
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/BadRequestError'

    BadRequestOnlyShowAPIKeyOnce:
      description: |
        Bad request, API key has already been fetched.
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/BadRequestError'
    AccessRequestDeleted:
      description: Access request deleted
    AccessRequest:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessRequest'
    AccessRequestList:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AccessRequest'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
    MissingAcceptHeader:
      description: Missing Accept header
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotAcceptableError'
    ForbiddenContactOwner:
      description: |
        The API owner does not allow access keys to be automatically generated. </br>
        Please provide a payload with a reason requesting access to this API in `requestText`
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
    ForbiddenOwnerOrUser:
      description: |
        Forbidden. </br>
        To use the resource one of the following condtions need to be true: </br>
          - You are the owner of the resource.
          - You are the owner of the API that the resource belongs to.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
    ForbiddenOnlyUser:
      description: |
        Forbidden. </br>
        To use the resource the following condtion need to be true: </br>
          - You are the owner of the resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
    ForbiddenMissingEmailInToken:
      description: |
        Forbidden. </br>
        To use the resource the following condtion need to be true: </br>
          - The token must contain an email address.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
  schemas:
    apiSpecSummary:
      type: object
      required:
        - contact
        - description
        - version
        - title
      properties:
        contact:
          $ref: '#/components/schemas/ApiContact'
        description:
          type: string
          example: This is the description of my API
        version:
          type: string
          example: 2.1.0
        title:
          type: string
          description: The name of the API
          example: Weather data
        endpoint:
          type: array
          items:
              type: string
          description: The endpoint of the API
          example: www.someApi.com/apis
    ApiGatewayServices:
      type: array
      items:
        $ref: '#/components/schemas/ApiGatewayService'
    ApiGatewayService:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Name of service
          example: WeatherService
    SomeApi:
      type: object
      required:
        - name
        - contact
        - description
      properties:
        id:
          description: A unique ID of the API
          type: integer
          format: int64
          example: 42
        name:
          type: string
          description: The name of the API
          example: Weather data
        accessDetails:
          $ref: '#/components/schemas/AccessDetails'
        apiSpecificationUrl:
          type: string
          description: The URL the the API's specification
          example: 'http://weather.com/api/api.yaml'
        endpointUrl:
          type: string
          description: The URL of the API's endpoint
          example: 'http://weather.com/api'
        contact:
          $ref: '#/components/schemas/ApiContact'
        accessProtocol:
          $ref: '#/components/schemas/AccessProtocol'
        description:
          type: string
          description: A description of the API
          example: Provides real time weather data
        extendedDescription:
          type: string
          description: An extended description of the API, which allows for more details and markdown formatting
          example: Provides real time weather data, seriously, real time!
        visibilityLevel:
          $ref: '#/components/schemas/VisibilityLevel'
        whenToUse:
          type: array
          items:
            type: string
          maxItems: 3
          description: >-
            A list of example use cases for when one might want to use this API.
            Each use case will be prefixed with the text "Use this API when
            [your text]".
          example:
            - You want to check the weather for any location in the world
            - You need updated weather data no older than 10 minutes
        owner:
          type: string
          description: The name of the owner of the API
          example: Jane Doe
    SomeApiWithoutSpec:
      type: object
      required:
        - name
        - contact
      properties:
        id:
          description: A unique ID of the API
          type: integer
          format: int64
          example: 42
        name:
          type: string
          description: The name of the API
          example: Weather data
        accessDetails:
          $ref: '#/components/schemas/AccessDetails'
        endpointUrl:
          type: string
          description: The URL of the API's endpoint
          example: 'http://weather.com/api'
        contact:
          $ref: '#/components/schemas/ApiContact'
        accessProtocol:
          $ref: '#/components/schemas/AccessProtocol'
        description:
          type: string
          description: A description of the API
          example: Provides real time weather data
        extendedDescription:
          type: string
          description: An extended description of the API, which allows for more details and markdown formatting
          example: Provides real time weather data, seriously, real time!
        visibilityLevel:
          $ref: '#/components/schemas/VisibilityLevel'
        whenToUse:
          type: array
          items:
            type: string
          maxItems: 3
          description: >-
            A list of example use cases for when one might want to use this API.
            Each use case will be prefixed with the text "Use this API when
            [your text]".
          example:
            - You want to check the weather for any location in the world
            - You need updated weather data no older than 10 minutes
    SomeApiWithSpec:
      type: object
      required:
        - apiSpecificationUrl
      properties:
        id:
          description: A unique ID of the API
          type: integer
          format: int64
          example: 42
        accessDetails:
          $ref: '#/components/schemas/AccessDetails'
        apiSpecificationUrl:
          type: string
          description: The URL the the API's specification
          example: 'http://weather.com/api/api.yaml'
        extendedDescription:
          type: string
          description: An extended description of the API, which allows for more details and markdown formatting
          example: Provides real time weather data, seriously, real time!
        visibilityLevel:
          $ref: '#/components/schemas/VisibilityLevel'
    AccessDetails:
      type: object
      required:
        - accessLevel
      properties:
        accessLevel:
          $ref: '#/components/schemas/AccessLevel'
        gatewayServiceName:
          type: string
          description: The name of the service in the API gateway to connect this API to.
          example: weather-api
        apiGatewayDetails:
          $ref: '#/components/schemas/ApiGatewayDetails'
        gatewayRouteHostUrlPrefix:
          type: string
          description: The prefix for this API's gateway URL.
          example: my-app, could give full URL my-app.api.oslo.kommune.no
    AccessLevel:
      type: string
      description: The type of API access level configured
      example: NO_ACCESS
      enum: [NO_ACCESS, AUTOMATIC_API_KEY, API_KEY_WITH_APPROVAL]
    ApiGatewayDetails:
      type: object
      required:
        - type
      properties:
        stripPath:
          type: string
          description: |
            Part of path in URL that should be stripped away from exposed URL in gateway. In the example
            /internal/api/ will be stripped away from the exposed URL. If the upstream API looks like a.b
            .com/internal/api/some-path, then the exposed URL in gateway will look like api.exposed.com/some-path.
            Must end in /
          example: '/internal/api/'
        host:
          type: string
          description: URL for upstream API
          example: weather-service.com
        type:
          $ref: '#/components/schemas/UpstreamType'
        itasUpstream:
          $ref: '#/components/schemas/ItasUpstream'
    ItasUpstream:
      type: object
      properties:
        port:
          type: integer
          format: int32
          description: port for servers
          example: 443
        servers:
          type: array
          items:
            type: string
          maxItems: 20
          description: >-
            A list of servers to use as upstream servers for your API.
            Load will be balanced between these servers.
          example:
            - internalserver1
            - internalserver2
    UpstreamType:
      type: string
      description: The type of upstream
      example: DEFAULT
      enum: [ITAS_CLASSIC, DEFAULT]
    VisibilityLevel:
      type: string
      description: The type of visibility level
      example: PRIVATE
      enum: [PUBLIC, PROTECTED, PRIVATE]
      default: PUBLIC
    ApiContact:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: string
          description: The API contact's name
          example: John Doe
        email:
          type: string
          description: The API contact's e-mail
          example: johndoe@mail.com
        url:
          type: string
          description: URL to a contact or support page
    Access:
      type: object
      properties:
        id:
          description: A unique ID of the Access
          type: integer
          format: int64
          example: 42
        userInfo:
          $ref: '#/components/schemas/UserInfo'
        apiRef:
          description: Reference to the identity of the API.
          type: integer
          format: int64
          example: 42
        name:
          type: string
          description: Free text field to give this access a custom name.
        createdAt:
          $ref: '#/components/schemas/DateTime'
        active:
          description: True if key is active, and false if it has been revoked.
          type: boolean
        accessRequestRef:
          description: Reference to the identity of the AccessRequest.
          type: integer
          format: int64
          example: 42
        revokedAt:
            $ref: '#/components/schemas/DateTime'
        apiKeyRef:
          type: string
          description: Reference to the identity of the the created API key
          example: 265c3420-62b2-4dad-a634-445c8bcbd582
        apiKeyFetched:
          type: boolean
          description: true if key has been fetched
    AccessRevokedResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Access'
      properties:
        active:
          default: false
    AccessApiKeyValueResponse:
      type: object
      properties:
        apiKeyValue:
          description: Value of the API Key
          type: string
          example: lkV2AuLw39drJwMh14DB3UXHM61NSEks
    DateTime:
      type: string
      format: date-time
      description: |
        Datetime object, see OpenAPI specification for exact format standard.
      example: 2017-07-21T17:32:28Z
    AccessRequest:
      type: object
      properties:
        id:
          description: A unique ID of the AccessRequest
          type: integer
          format: int64
          example: 42
        userInfo:
          $ref: '#/components/schemas/UserInfo'
        apiRef:
          description: Reference to the identity of the API.
          type: integer
          format: int64
          example: 42
        requestText:
          $ref: '#/components/schemas/AccessRequestText'
        requestStatus:
          $ref: '#/components/schemas/AccessRequestStatus'
        createdAt:
           $ref: '#/components/schemas/DateTime'
        resolvedAt:
          $ref: '#/components/schemas/DateTime'
        resolvedMessage:
          type: string
          description: Message from the API owner after resolving the request.
          example: Your usage of our API sounds awsome. Looking forward seeing it in action soon.
    AccessRequestText:
      type: string
      description: A description of the reason for the request.
      example: I want to use this weather API for my cool new wind surfing app.
    AccessRequestStatus:
      deprecated: true
      type: string
      description: The status of a request for access. The values of this object is subject to change.
      enum: [REJECTED, PENDING_APPROVAL, APPROVED]
      example: PENDING_APPROVAL
    CreateAccessRequestRequest:
      type: object
      required:
        - apiRef
      properties:
        userInfo:
          $ref: '#/components/schemas/UserInfo'
        apiRef:
          description: Reference to the identity of the API.
          type: integer
          format: int64
          example: 42
        requestText:
          $ref: '#/components/schemas/AccessRequestText'
    UpdateAccessRequestRequest:
      type: object
      required:
        - requestStatus
      properties:
        requestStatus:
          $ref: '#/components/schemas/AccessRequestStatus'
          example: 'APPROVED'
        resolvedMessage:
          type: string
          description: Message from the API owner after resolving the request.
          example: Your usage of our API sounds awsome. Looking forward seeing it in action soon.
    ApiKey:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: Reference ID of the created API key
          example: 265c3420-62b2-4dad-a634-445c8bcbd582
        key:
          type: string
          description: The API key
          example: lkV2AuLw39drJwMh14DB3UXHM61NSEks
        createdAt:
          $ref: '#/components/schemas/DateTime'
        apiId:
          description: A unique ID of the API
          type: integer
          format: int64
          example: 42
        apiName:
          type: string
          description: The name of the API
          example: Petstore
        revokedAt:
          $ref: '#/components/schemas/DateTime'
        active:
          type: boolean
          description: True if key is usable, and false if it has been revoked.
    AccessProtocol:
      type: string
      enum:
        - REST
        - SOAP
    UserInfo:
      description: Information about a user
      type: object
      required:
        - email
      properties:
        email:
          type: string
          description: The user's e-mail
          example: johndoe@mail.com

    BadRequestError:
      type: object
      allOf:
        - $ref: '#/components/schemas/Error'
      properties:
        httpStatusCode:
          type: integer
          format: int32
          example: 400
        internalCode:
          type: string
          example: APIC1006
        userMessage:
          type: string
          example: api is not valid
        internalMessage:
          type: string
          example: api is not valid
        moreInfo:
          type: string
          example: >-
            https://github.oslo.kommune.no/origodigi/api-catalog-backend/blob/master/errorCodes.md#APIC1006
    UnauthorizedError:
      type: object
      allOf:
        - $ref: '#/components/schemas/Error'
      properties:
        httpStatusCode:
          type: integer
          format: int32
          example: 401
        internalCode:
          type: string
          example: APIC1007
        userMessage:
          type: string
          example: You haven't provided a valid access token
        internalMessage:
          type: string
          example: Unauthorized
        moreInfo:
          type: string
          example: >-
            https://github.oslo.kommune.no/origodigi/api-catalog-backend/blob/master/errorCodes.md#APIC1007
    ForbiddenError:
      type: object
      allOf:
        - $ref: '#/components/schemas/Error'
      properties:
        httpStatusCode:
          type: integer
          format: int32
          example: 403
        internalCode:
          type: string
          example: APIC1008
        userMessage:
          type: string
          example: The provided access token isn't authorized to do this
        internalMessage:
          type: string
          example: Forbidden
        moreInfo:
          type: string
          example: >-
            https://github.oslo.kommune.no/origodigi/api-catalog-backend/blob/master/errorCodes.md#APIC1008
    NotFoundError:
      type: object
      allOf:
        - $ref: '#/components/schemas/Error'
      properties:
        httpStatusCode:
          type: integer
          format: int32
          example: 404
        internalCode:
          type: string
          example: APIC1003
        userMessage:
          type: string
          example: API not found
        internalMessage:
          type: string
          example: API with id not found in db
        moreInfo:
          type: string
          example: >-
            https://github.oslo.kommune.no/origodigi/api-catalog-backend/blob/master/errorCodes.md#APIC1003
    InvalidSpecificationError:
      # allOf does not work when we also want to add our own field, in this case SchemaValidationErrors
      # So, therefore we reimplement Error Object here
      type: object
      required:
        - schemaValidationErrors
        - httpStatusCode
        - internalCode
        - userMessage
        - internalMessage
        - moreInfo
      properties:
        schemaValidationErrors:
          type: array
          items:
            $ref: '#/components/schemas/SchemaValidationError'
        httpStatusCode:
          type: integer
          format: int32
          example: 404
        internalCode:
          type: string
          example: APIC1011
        userMessage:
          type: string
          example: There was an error when trying to parse the API specification.
        internalMessage:
          type: string
          example: >-
            When retrieving the specification at the specificed URL, we were not
            able to get anything.
        moreInfo:
          type: string
          example: >-
            https://github.oslo.kommune.no/origodigi/api-catalog-backend/blob/master/errorCodes.md#APIC1011
    SchemaValidationError:
      type: object
      properties:
        keyword:
          type: string
          description: Gives an indication as to what the problem is, for example required field missing
          example: required
        message:
          type: string
          description: validation error message
          example: Field X is missing
        missing:
          type: array
          items:
            type: string
            description: missing field
            example: title
          description: list of missing fields
        specPointer:
          type: string
          description: Tries to give an indication as to where in the supplied specification the validation failed
          example: "/info"
        schemaPointer:
          type: string
          description: Tries to give an indication as to what in the official Swagger/openAPi specification the validation failed against
          example: "/definitions/info"
    NotAcceptableError:
      type: object
      allOf:
        - $ref: '#/components/schemas/Error'
      properties:
        httpStatusCode:
          type: integer
          format: int32
          example: 406
        internalCode:
          type: string
          example: APIC1004
        userMessage:
          type: string
          example: The request is missing the Accept header
        internalMessage:
          type: string
          example: The request is missing the Accept header
        moreInfo:
          type: string
          example: >-
            https://github.oslo.kommune.no/origodigi/api-catalog-backend/blob/master/errorCodes.md#APIC1004
    ConflictError:
      type: object
      allOf:
        - $ref: '#/components/schemas/Error'
      properties:
        httpStatusCode:
          type: integer
          format: int32
          example: 409
        internalCode:
          type: string
          example: APIC1002
        userMessage:
          type: string
          example: 'Conflict in resource, this resource already exists.'
        internalMessage:
          type: string
          example: Conflict
        moreInfo:
          type: string
          example: >-
            https://github.oslo.kommune.no/origodigi/api-catalog-backend/blob/master/errorCodes.md#APIC1002
    UnexpectedError:
      type: object
      allOf:
        - $ref: '#/components/schemas/Error'
      properties:
        httpStatusCode:
          type: integer
          format: int32
          example: 500
        internalCode:
          type: string
          example: APIC1009
        userMessage:
          type: string
          example: >-
            Oops, something went wrong. The error has been logged and will be
            investigated.
        internalMessage:
          type: string
          example: Unexpected error.
        moreInfo:
          type: string
          example: >-
            https://github.oslo.kommune.no/origodigi/api-catalog-backend/blob/master/errorCodes.md#APIC1009
    ServiceUnavailableError:
      type: object
      allOf:
        - $ref: '#/components/schemas/Error'
      properties:
        httpStatusCode:
          type: integer
          format: int32
          example: 503
        internalCode:
          type: string
          example: APIC1010
        userMessage:
          type: string
          example: >
            The service is currently unavailable due to a dependent service
            being down. This error has been logged and

            will be investigated.
        internalMessage:
          type: string
          example: 'The API catalog is unavailable, so we cannot process this request.'
        moreInfo:
          type: string
          example: >-
            https://github.oslo.kommune.no/origodigi/api-catalog-backend/blob/master/errorCodes.md#APIC1010
    Error:
      type: object
      discriminator:
        propertyName: internalCode
      required:
        - httpStatusCode
        - internalCode
        - userMessage
        - internalMessage
        - moreInfo
      properties:
        httpStatusCode:
          type: integer
          format: int32
          example: 500
        internalCode:
          type: string
          example: APIC1009
        userMessage:
          type: string
          example: 'Ops, something went wrong'
        internalMessage:
          type: string
          example: Internal server error
        moreInfo:
          type: string
          example: >-
            https://github.oslo.kommune.no/origodigi/api-catalog-backend/blob/master/errorCodes.md#APIC1009
